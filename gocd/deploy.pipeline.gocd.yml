format_version: 4
common:
  plan: &plan
    resources:
      - docker
    artifacts:
      - build:
          source: terraform/deployment.tfplan
          destination: terraform/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan create
  deploy: &deploy
    resources:
      - docker
    tasks:
      - fetch:
          stage: plan
          job: plan
          source: terraform/deployment.tfplan
          destination: terraform/
          is_file: yes
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks wait_ecs

pipelines:
  'ehr-transfer-service.dev':
    group: deductions
    label_template: "${COUNT}-${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: ehr-transfer-service
        stage: docker
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_dev
    environment_variables:
      NHS_ENVIRONMENT: dev
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy

  'ehr-transfer-service.test':
    group: deductions
    label_template: "${COUNT}-${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: ehr-transfer-service
        stage: docker
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_test
      dev_env:
        pipeline: ehr-transfer-service.dev
        stage: deploy
    environment_variables:
      NHS_ENVIRONMENT: test
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy

  'ehr-transfer-service.pre-prod':
    group: deductions
    label_template: "${COUNT}-${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: ehr-transfer-service
        stage: docker
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_pre_prod
      test_env:
        pipeline: ehr-transfer-service.test
        stage: deploy
    environment_variables:
      NHS_ENVIRONMENT: pre-prod
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy

  'ehr-transfer-service.prod':
    group: deductions
    label_template: "${COUNT}-${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: ehr-transfer-service
        stage: docker
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_prod
      pre-prod_env:
        pipeline: ehr-transfer-service.pre-prod
        stage: deploy
    environment_variables:
      NHS_ENVIRONMENT: prod
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          approval:
            type: manual
            allow_only_on_success: true
          clean_workspace: true
          jobs:
            deploy: *deploy
